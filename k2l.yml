AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Deploy a stream and a labmda function to read from the stream.

Parameters:
  CodeBucketName:
    Type: String
    Description: Bucket containing lambda code zip file
  ZipFileName:
    Type: String
    Default: kreader.zip
  EventZipFileName:
    Type: String
    Default: eventproc.zip

Resources:
  MyStream:
    Type: 'AWS::Kinesis::Stream'
    Properties:
      Name: MyKinesisStream
      RetentionPeriodHours: 24
      ShardCount: 1
      Tags:
        -
          Key: Environment
          Value: Production

  KinesisReader:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "kreader.lambda_handler"
      Role: !GetAtt KinesisReaderExecutionRole.Arn
      Code:
          S3Bucket: !Ref CodeBucketName
          S3Key: !Ref ZipFileName
      Runtime: "python2.7"
      Timeout: 60

  EventSourceMapping: 
    Type: "AWS::Lambda::EventSourceMapping"
    Properties: 
      EventSourceArn: 
        Fn::Join: 
          - ""
          - 
            - "arn:aws:kinesis:"
            - 
              Ref: "AWS::Region"
            - ":"
            - 
              Ref: "AWS::AccountId"
            - ":stream/"
            - 
              Ref: "MyStream"
      FunctionName: 
        Fn::GetAtt: 
          - "KinesisReader"
          - "Arn"
      StartingPosition: "TRIM_HORIZON"


  KinesisReaderExecutionRole:
    Type: AWS::IAM::Role
    DependsOn: MyStream
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: metrics
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            Resource: '*'
      - PolicyName: stream
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kinesis:DescribeStream
            - kinesis:GetRecords
            - kinesis:GetShardIterator
            Resource: !Sub ${MyStream.Arn}
      - PolicyName: lambda
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:Invoke
            - lambda:InvokeAsync
            - lambda:InvokeFunction
            Resource: '*'
